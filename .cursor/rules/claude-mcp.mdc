---
description: Claude Code SDK and MCP usage in this project
---
# Claude Code SDK + MCP Usage

- **Dynamic Import**: Import SDK via `const claudeCode = import("@anthropic-ai/claude-code");` to avoid ESM/CJS issues.
- **Query**: Use `const { query } = await claudeCode;` then iterate `for await (const event of query({...}))`.
- **Streaming**: Handle `partial-assistant` deltas by updating the last assistant message. Final content arrives as `assistant` event.
- **Session**: On `system:init`, capture `sessionId` and persist via `LocalStorage`.
- **MCP Servers**: Provide a `filesystem` server with `ALLOWED_PATHS: process.cwd()` for per-directory sandboxing.
- **Permissions**: `canUseTool` currently allows only read tools: `Read`, `Grep`, `Glob`. Deny others with a message.
- **Env**: Pass `ANTHROPIC_API_KEY` from Raycast preferences into the SDK `env`.